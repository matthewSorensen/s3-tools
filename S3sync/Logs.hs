{-# LANGUAGE OverloadedStrings, FlexibleInstances, OverlappingInstances, TemplateHaskell #-}
module S3sync.Logs (
                    S3Log (..)
                   , Requester (..)
                   , Quoted (..)
                   , logMessages
                   -- Also implicitly exports JSON awesomeness
                   )where

import Data.Text
import Data.Attoparsec.Text hiding (parse)
import Control.Applicative
import Data.Char
import Data.Time.Clock (UTCTime)
import Data.Time.Format (parseTime)
import System.Locale (defaultTimeLocale)
import Data.Aeson.Types hiding (parse,Parser)
import Data.Aeson.TH
import Data.Text.Encoding (decodeUtf8)
import Data.ByteString (ByteString)
import Control.Monad (mzero)


logMessages::ByteString->[S3Log]
logMessages = either (const []) id . parseOnly (many parseLog) . decodeUtf8





data Requester = Requester Text | Anonymous deriving(Show,Eq)

newtype Quoted = Quoted Text deriving(Show,Eq)

data S3Log = S3Log {
      owner::Text -- The canonical user id of the owner of the source bucket.
    , bucket::Text -- The name of the bucket that the request was processed against.
    , time::UTCTime -- The time at which the request was received.
    , ip::Text -- The apparent Internet address of the requester.
    , requester::Maybe Text -- The canonical user id of the requester, or the string "Anonymous" for unauthenticated requests.
    , requestId::Text -- The request ID is a string generated by Amazon S3 to uniquely identify each request.
    , operation::Text -- Either SOAP.operation or REST.HTTP_method.resource_type.
    , key::Maybe Text -- The "key" part of the request, URL encoded, or "-" if the operation does not take a key parameter.
    , requestURI::Quoted -- The Request-URI part of the HTTP request message.
    , status::Int -- The numeric HTTP status code of the response.
    , errorCode::Maybe Text -- The Amazon S3 Error Code
    , sent::Int -- The number of response bytes sent, excluding HTTP protocol overhead.
    , size::Int -- The total size of the object in question.
    , totalTime::Int -- The number of milliseconds the request was in flight from the server's perspective.
    , turnAround::Int -- The number of milliseconds that Amazon S3 spent processing your request.
    , referrer::Maybe Quoted -- The value of the HTTP Referrer header, if present.
    , userAgent::Maybe Quoted -- The value of the HTTP User-Agent header.
    , versionId::Maybe Text -- The version ID in the request, or "-" if the operation does not take a versionId parameter.
    } deriving (Show,Eq)

parseLog::Parser S3Log
parseLog = fiveteen (three $ pure S3Log) <* rest
    where three f = f <*> parseField <*> parseField <*> parseField
          fiveteen = three . three . three . three . three
          rest = takeTill (=='\n') *> endOfLine

class Parse a where
    parse::Parser a

    parseField::Parser a
    parseField = skipSpace *> parse

instance Parse Int where
    parse = decimal <|> (0 <$ char '-')

instance Parse Text where
    parse = takeTill isSpace

instance Parse a=>Parse (Maybe a) where
    parse = (Nothing <$ char '-') <|> (Just <$> parse)

instance Parse Quoted where
    parse = char '"' *> (Quoted <$> scan False sm) <* char '"'
        where sm False '"'  = Nothing
              sm False '\\' = Just True
              sm False _    = Just False
              sm True  _    = Just False

instance Parse (Maybe Quoted) where
    parse = toMaybe <$> parse 
        where toMaybe (Quoted "-") = Nothing
              toMaybe (Quoted t  ) = Just $ Quoted t

instance Parse UTCTime where
    parse = char '[' *> (takeTill (==']') >>= toUTC) <* char ']'
            where toUTC = maybe (fail "timestamp") pure . parseTime defaultTimeLocale "%d/%b/%Y:%H:%M:%S %z" .unpack

instance Parse Requester where
    parse = (Anonymous <$ string "Anonymous") <|> (Requester <$> parse)

-- As the Quoted type only exists to force ghc to choose certain
-- instances of Parse, it is otherwise treated as a string:
instance ToJSON Quoted where
    toJSON (Quoted s) = String s

instance FromJSON Quoted where
    parseJSON (String s)  = pure $ Quoted s
    parseJSON _           = mzero

-- The string "Anonymous" gets special treatment in the context of a requester:
instance ToJSON Requester where
    toJSON (Requester t) = String t
    toJSON Anonymous     = String "Anonymous"
instance FromJSON Requester where
    parseJSON (String "Anonymous") = pure Anonymous
    parseJSON (String r)           = pure $ Requester r
    parseJSON _                    = mzero

$(deriveJSON id ''S3Log)